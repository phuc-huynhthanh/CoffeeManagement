import { db } from "../config/db.conf.js";

export const MucGiamGiaModel = {
  // üìã L·∫•y t·∫•t c·∫£ m·ª©c gi·∫£m gi√°
  async layTatCa() {
    const [rows] = await db.query(`SELECT * FROM muc_giam_gia`);
    return rows;
  },

  // üîé T√¨m theo ID
  async timTheoId(id) {
    const [rows] = await db.query(
      `SELECT * FROM muc_giam_gia WHERE muc_giam_gia_id = ?`,
      [id]
    );
    return rows[0];
  },

  // üîé T√¨m theo ƒëi·ªÅu ki·ªán (VD: ph·∫ßn trƒÉm ho·∫∑c m√¥ t·∫£)
  async timTheoDieuKien(dieu_kien) {
    const entries = Object.entries(dieu_kien);
    if (entries.length === 0)
      throw new Error("H√†m timTheoDieuKien() c·∫ßn √≠t nh·∫•t 1 ƒëi·ªÅu ki·ªán.");

    const whereClause = entries.map(([col]) => `\`${col}\` = ?`).join(" AND ");
    const values = entries.map(([_, val]) => val);

    const [rows] = await db.query(
      `SELECT * FROM \`muc_giam_gia\` WHERE ${whereClause}`,
      values
    );

    return rows;
  },

  // ‚ûï Th√™m m·ª©c gi·∫£m gi√°
  async them({ phan_tram_giam, mo_ta }) {
    const [result] = await db.query(
      `INSERT INTO muc_giam_gia (phan_tram_giam, mo_ta) VALUES (?, ?)`,
      [phan_tram_giam, mo_ta]
    );
    return result.insertId;
  },

  // ‚úèÔ∏è C·∫≠p nh·∫≠t
  async capNhat(id, { phan_tram_giam, mo_ta }) {
    const [result] = await db.query(
      `UPDATE muc_giam_gia SET phan_tram_giam = ?, mo_ta = ? WHERE muc_giam_gia_id = ?`,
      [phan_tram_giam, mo_ta, id]
    );
    return result.affectedRows;
  },

  // ‚ùå X√≥a
  async xoa(id) {
    const [result] = await db.query(
      `DELETE FROM muc_giam_gia WHERE muc_giam_gia_id = ?`,
      [id]
    );
    return result.affectedRows;
  },
};
